import SearchBar from "../components/SearchBar";
import FilterDropdown from "../components/FilterDropdown";
import CountryCardsContainer from "../components/CountryCardsContainer";
import CountryCard from "../components/CountryCard";
import {useState} from "react";

export default function Home({data}) {
    //Input State
    const [searchBarInput, setSearchBarInput] = useState('')
    const [filterValue, setFilterValue] = useState('');
    //
    const [filteredCountries, setFilteredCountries] = useState(null)
    const filterCountries = (state, value) => {
        if (state === 'filterValue') setFilterValue(value);
        if (state === 'searchBarInput') setSearchBarInput(value);
        if (filterValue.length > 0 || searchBarInput.length > 0) {
            //TODO FIX THIS SHIT
            let filtered = data.filter(country => country.name.common.toLowerCase().includes(searchBarInput.toLowerCase()));
            filtered = filtered.filter(country => country.region === filterValue);
            console.log(filtered)
            setFilteredCountries(filtered);
        }
        console.log(searchBarInput);
        console.log(filterValue);
    }
    return (
        <div>
            {/*<Head>*/}
            {/*  <title>Create Next App</title>*/}
            {/*  <meta name="description" content="Generated by create next app" />*/}
            {/*  <link rel="icon" href="/favicon.ico" />*/}
            {/*</Head>*/}

            <main>
                <SearchBar value={searchBarInput} filterCountries={filterCountries}/>
                <FilterDropdown value={filterValue} filterCountries={filterCountries}/>
                {
                    data &&
                    (<CountryCardsContainer>
                        {/*TODO: Change index to unique identifier*/}
                        {
                            !filteredCountries ?
                                data.map((country, index) => {
                                    return <CountryCard key={index} countryData={country}/>
                                })
                                : filteredCountries.map((country, index) => {
                                    return <CountryCard key={index} countryData={country}/>
                                })
                        }
                    </CountryCardsContainer>)
                }
            </main>
        </div>
    )
}


export async function getServerSideProps() {
    const response = await fetch('https://restcountries.com/v3.1/all?fields=name,population,region,capital,flags')
    const parsedData = await response.json()

    return {
        props: {
            data: parsedData
        }
    }
}