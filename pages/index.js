import CountryCardsContainer from "../components/CountryCardsContainer";
import CountryCard from "../components/CountryCard";
import {useEffect, useState} from "react";
import {lowercaseIncludes, lowercaseIsEqual} from "../helpers/filterFunctions";
import InputContainer from "../components/InputsContainer";

export default function Home({data}) {
    //Input State
    const [searchBarInput, setSearchBarInput] = useState('')
    const [filterValue, setFilterValue] = useState('');
    //
    const [filteredCountries, setFilteredCountries] = useState(null)

    useEffect(() => {
        filterCountries()
    }, [searchBarInput, setSearchBarInput, filterValue, setFilterValue])

    //TODO: Abstract this to its own helpers/file or helpers/filterFunctions.js
    const filterCountries = () => {
        let filteredArray = null;

        //If both inputs are empty then set filtered countries to null
        if (!searchBarInput.length > 0 && !filterValue.length > 0) return setFilteredCountries(filteredArray);

        //If both inputs are filled out do both filters
        if (searchBarInput.length > 0 && filterValue.length > 0) {
            filteredArray = data.filter(c => lowercaseIncludes(c.name.common, searchBarInput))
            filteredArray = filteredArray.filter(c => lowercaseIsEqual(c.region, filterValue))
        }
        //Else only filter based on input that isn't empty
        else {
            searchBarInput.length > 0 ? filteredArray = data.filter(c => lowercaseIncludes(c.name.common, searchBarInput))
                : filteredArray = data.filter(c => lowercaseIsEqual(c.region, filterValue))
        }

        //Catch for when both filters give an empty array.
        if (filteredArray.length === 0) return setFilteredCountries([])

        setFilteredCountries(filteredArray);
    }

    return (
        <div>
            {/*<Head>*/}
            {/*  <title>Create Next App</title>*/}
            {/*  <meta name="description" content="Generated by create next app" />*/}
            {/*  <link rel="icon" href="/favicon.ico" />*/}
            {/*</Head>*/}
            <main>
                <InputContainer
                    searchBarInput={searchBarInput}
                    setSearchBarInput={setSearchBarInput}
                    filterValue={filterValue}
                    setFilterValue={setFilterValue}
                />
                {
                    data &&
                    (<CountryCardsContainer>
                        {/*TODO: Change index to unique identifier*/}
                        {
                            filteredCountries ? filteredCountries.map((country, index) => {
                                    return <CountryCard key={index} countryData={country}/>
                                })
                                : data.map((country, index) => {
                                    return <CountryCard key={index} countryData={country}/>
                                })
                        }
                    </CountryCardsContainer>)
                }
            </main>
        </div>
    )
}


export async function getServerSideProps() {
    const response = await fetch('https://restcountries.com/v3.1/all?fields=name,population,region,capital,flags')
    const parsedData = await response.json()

    return {
        props: {
            data: parsedData
        }
    }
}